<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://nor-s.github.io/</id><title>RohRoh</title><subtitle>.</subtitle> <updated>2022-04-16T21:01:54+09:00</updated> <author> <name>roh</name> <uri>https://nor-s.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://nor-s.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://nor-s.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 roh </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[opengl] OGLDEV: Skeleton Animation In OpenGL using Assimp 3</title><link href="https://nor-s.github.io/posts/2022/04/17/01/58/skeleton3/" rel="alternate" type="text/html" title="[opengl] OGLDEV: Skeleton Animation In OpenGL using Assimp 3" /><published>2022-04-17T01:58:28+09:00</published> <updated>2022-04-17T01:58:28+09:00</updated> <id>https://nor-s.github.io/posts/2022/04/17/01/58/skeleton3/</id> <content src="https://nor-s.github.io/posts/2022/04/17/01/58/skeleton3/" /> <author> <name>roh</name> </author> <category term="graphics" /> <category term="graphics-opengl" /> <summary> intro 파트 1,2에서는 Assimp 라이브러리를 사용하여 골격 정보를 로드하는 법을 다루었고, 각 정점이 가중치와 함께 정점에 영향을 미치는 본에 대응하는 법을 다루었다. 이 파트에서는 스켈레톤 애니메이션 기법의 핵심인 행렬 변환에 대해 다룬다. blender에서는 애니메이션을 생성할 때 key-frames에 있는 본의 위치와 각도를 조절하는 키 프레임을 사용한다. 모든 정점들의 위치를 저장하여, 각 프레임마다 해당하는 위치에 정점들을 배치하는 것은 비효율적임.(vertex buffer 등에 문제) How Assimp manages the animation aiNodeAnim ... </summary> </entry> <entry><title>[opengl] OGLDEV: Skeleton Animation In OpenGL using Assimp 2</title><link href="https://nor-s.github.io/posts/2022/03/25/01/47/skeleton2/" rel="alternate" type="text/html" title="[opengl] OGLDEV: Skeleton Animation In OpenGL using Assimp 2" /><published>2022-03-25T01:47:35+09:00</published> <updated>2022-03-25T01:47:35+09:00</updated> <id>https://nor-s.github.io/posts/2022/03/25/01/47/skeleton2/</id> <content src="https://nor-s.github.io/posts/2022/03/25/01/47/skeleton2/" /> <author> <name>roh</name> </author> <category term="graphics" /> <category term="graphics-opengl" /> <summary> 이번 영상은 본과 그 정점에 미치는 영향을 시각화하는 튜토리얼이다. 지금 당장 구현하고 싶은 부분이 아니기 때문에 정리는 생략했다. intro aiScene의 구조는 위와 같다. scene은 mesh 들을 가짐 mesh 에는 bone들이 있음. bone에는 bone의 이름과, offsetMatrix, mWeights가 있음 mWeights는 정점의 인덱스와 정점에 미치는 가중치를 가짐.(0~1.0) offsetMatrix는 mesh space를 bone space로 변환해주는 행렬임. 만약 스키닝된 모델에서 offset만 적용시킬 경우, bone sp... </summary> </entry> <entry><title>[opengl] OGLDEV: Skeleton Animation In OpenGL using Assimp 1</title><link href="https://nor-s.github.io/posts/2022/03/24/03/46/skeleton1/" rel="alternate" type="text/html" title="[opengl] OGLDEV: Skeleton Animation In OpenGL using Assimp 1" /><published>2022-03-24T03:46:39+09:00</published> <updated>2022-04-16T20:57:38+09:00</updated> <id>https://nor-s.github.io/posts/2022/03/24/03/46/skeleton1/</id> <content src="https://nor-s.github.io/posts/2022/03/24/03/46/skeleton1/" /> <author> <name>roh</name> </author> <category term="graphics" /> <category term="graphics-opengl" /> <summary> Skeleton skeletal animation, skinning 은 애니메이팅의 기본적인 방법이다. skeletal animation 모델을 skin 이라고 부름 (스키닝) bone 은 실제 세계에서와 같이 skin을 움직이는 skeleton. skeleton과 skin 사이에 빈공간만 존재 그러므로, 블렌더와 같은 소프트웨어는 vertices의 리스트만 제공한다. 즉, bone이 움직이고 회전하는 변환이 뼈의 영향을 받는 꼭짓점에 적용되어야함. skeleton 이 아닌 skin만 렌더링됨 skeleton 과 bone의 역할은 단순히 skin에 사용할 수 ... </summary> </entry> <entry><title>[UE4] Skeleton Assets: Overview</title><link href="https://nor-s.github.io/posts/2022/03/24/01/36/UE4_Skeleton_Assets_Overview/" rel="alternate" type="text/html" title="[UE4] Skeleton Assets: Overview" /><published>2022-03-24T01:36:00+09:00</published> <updated>2022-03-24T01:36:00+09:00</updated> <id>https://nor-s.github.io/posts/2022/03/24/01/36/UE4_Skeleton_Assets_Overview/</id> <content src="https://nor-s.github.io/posts/2022/03/24/01/36/UE4_Skeleton_Assets_Overview/" /> <author> <name>roh</name> </author> <category term="game" /> <category term="game-unreal4" /> <summary> Skeleton Assets: Overview를 보고 정리한 문서 Skeleton Assets 캐릭터 생성 스켈레탈 메시로 외형부터 만든다. 스켈레탈 메시 == 3D모델 스켈레톤 구성 즉, 캐릭터의 리깅 작업 본이나 관절 계층 구조의 추가 및 정의 등이 진행된다. 캐릭터의 포즈 조정이 가능해짐. 타임라인 상에서 각 포즈들에 키 프레임 지정 포즈에 애니메이션을 부여하는 식으로 애니메이션 제작 임포트 외부 =&amp;gt; 언리얼 임포트 오해 한가지: 1:1 로 대응되는 스켈레톤이 있어야한다는 점 그럴 필요는 없음.(몇몇 조건들이 있긴함.) ... </summary> </entry> <entry><title>[UE4] 애니메이션 시작하기</title><link href="https://nor-s.github.io/posts/2022/03/23/21/58/unreal-animation/" rel="alternate" type="text/html" title="[UE4] 애니메이션 시작하기" /><published>2022-03-23T21:58:52+09:00</published> <updated>2022-03-23T19:06:08+09:00</updated> <id>https://nor-s.github.io/posts/2022/03/23/21/58/unreal-animation/</id> <content src="https://nor-s.github.io/posts/2022/03/23/21/58/unreal-animation/" /> <author> <name>roh</name> </author> <category term="game" /> <category term="game-unreal4" /> <summary> 애니메이션 시작하기 철학 다용도성 확보(versatile tools) 레이어화된 애니메이션 플로우 다양한 애니메이션 레이어에서 벌어지는 일들을 쉽게 분리해서 레이어별로 반복 처리하고 폴리시할 수 있음. 재사용성 애니메이션 속의 다양한 요소를 다른 캐릭과 애니메이션 등을 공유하는것 ue1: 버텍스 애니메이션 기반 ue2: 스켈레톤 추가, 소켓, 애니메이션 노티파이 등 요소 추가 ue3: cloth 추가, matinee를 위한 시네마틱 에디터가 추가됨 개요 스켈레톤이 중심 스켈레톤 메시 : 엔진 퀄리티 기능- LOD와 세트 애니메이션 블루프린트 ... </summary> </entry> </feed>
